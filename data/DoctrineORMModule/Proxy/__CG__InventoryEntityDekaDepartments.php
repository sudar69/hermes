<?php

namespace DoctrineORMModule\Proxy\__CG__\Inventory\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class DekaDepartments extends \Inventory\Entity\DekaDepartments implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'parentid', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'code', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'managerid', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'addressid', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'zone', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'status', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'path', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'depth');
        }

        return array('__isInitialized__', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'parentid', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'code', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'managerid', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'addressid', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'zone', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'status', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'path', '' . "\0" . 'Inventory\\Entity\\DekaDepartments' . "\0" . 'depth');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (DekaDepartments $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getParentid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentid', array());

        return parent::getParentid();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentid($parentid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentid', array($parentid));

        return parent::setParentid($parentid);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', array());

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', array($code));

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getManagerid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManagerid', array());

        return parent::getManagerid();
    }

    /**
     * {@inheritDoc}
     */
    public function setManagerid($managerid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManagerid', array($managerid));

        return parent::setManagerid($managerid);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddressid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddressid', array());

        return parent::getAddressid();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddressid($addressid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddressid', array($addressid));

        return parent::setAddressid($addressid);
    }

    /**
     * {@inheritDoc}
     */
    public function getZone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZone', array());

        return parent::getZone();
    }

    /**
     * {@inheritDoc}
     */
    public function setZone($zone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZone', array($zone));

        return parent::setZone($zone);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', array());

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setPath($path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPath', array($path));

        return parent::setPath($path);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepth', array());

        return parent::getDepth();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepth($depth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepth', array($depth));

        return parent::setDepth($depth);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', array());

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', array($url));

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedWhen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedWhen', array());

        return parent::getCreatedWhen();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedWhen($createdWhen)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedWhen', array($createdWhen));

        return parent::setCreatedWhen($createdWhen);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedBy', array());

        return parent::getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedBy($modifiedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedBy', array($modifiedBy));

        return parent::setModifiedBy($modifiedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function exchangeArray($data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'exchangeArray', array($data));

        return parent::exchangeArray($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getArrayCopy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrayCopy', array());

        return parent::getArrayCopy();
    }

}
