<?php

namespace DoctrineORMModule\Proxy\__CG__\Inventory\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Hgroups extends \Inventory\Entity\Hgroups implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'id', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'connecttype', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'connectvalue', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'speed', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'dispname', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'active', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'blockactive', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'blockcount', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'blockmin', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'orderId', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'readtimeout', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'iotimequota', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'remotePort', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'priority', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'readintervaltimeout', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'readtotaltimeoutmultiplier', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'readtotaltimeoutconstant', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'writetotaltimeoutmultiplier', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'writetotaltimeoutconstant', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'localPort', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'actionBeforeLock', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'parentId');
        }

        return array('__isInitialized__', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'id', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'connecttype', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'connectvalue', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'speed', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'dispname', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'active', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'blockactive', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'blockcount', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'blockmin', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'orderId', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'readtimeout', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'iotimequota', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'remotePort', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'priority', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'readintervaltimeout', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'readtotaltimeoutmultiplier', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'readtotaltimeoutconstant', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'writetotaltimeoutmultiplier', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'writetotaltimeoutconstant', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'localPort', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'actionBeforeLock', '' . "\0" . 'Inventory\\Entity\\Hgroups' . "\0" . 'parentId');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Hgroups $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setConnecttype($connecttype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConnecttype', array($connecttype));

        return parent::setConnecttype($connecttype);
    }

    /**
     * {@inheritDoc}
     */
    public function getConnecttype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConnecttype', array());

        return parent::getConnecttype();
    }

    /**
     * {@inheritDoc}
     */
    public function setConnectvalue($connectvalue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConnectvalue', array($connectvalue));

        return parent::setConnectvalue($connectvalue);
    }

    /**
     * {@inheritDoc}
     */
    public function getConnectvalue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConnectvalue', array());

        return parent::getConnectvalue();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpeed($speed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpeed', array($speed));

        return parent::setSpeed($speed);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpeed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpeed', array());

        return parent::getSpeed();
    }

    /**
     * {@inheritDoc}
     */
    public function setDispname($dispname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDispname', array($dispname));

        return parent::setDispname($dispname);
    }

    /**
     * {@inheritDoc}
     */
    public function getDispname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDispname', array());

        return parent::getDispname();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setBlockactive($blockactive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlockactive', array($blockactive));

        return parent::setBlockactive($blockactive);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlockactive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlockactive', array());

        return parent::getBlockactive();
    }

    /**
     * {@inheritDoc}
     */
    public function setBlockcount($blockcount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlockcount', array($blockcount));

        return parent::setBlockcount($blockcount);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlockcount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlockcount', array());

        return parent::getBlockcount();
    }

    /**
     * {@inheritDoc}
     */
    public function setBlockmin($blockmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlockmin', array($blockmin));

        return parent::setBlockmin($blockmin);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlockmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlockmin', array());

        return parent::getBlockmin();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderId($orderId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderId', array($orderId));

        return parent::setOrderId($orderId);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderId', array());

        return parent::getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    public function setReadtimeout($readtimeout)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReadtimeout', array($readtimeout));

        return parent::setReadtimeout($readtimeout);
    }

    /**
     * {@inheritDoc}
     */
    public function getReadtimeout()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReadtimeout', array());

        return parent::getReadtimeout();
    }

    /**
     * {@inheritDoc}
     */
    public function setIotimequota($iotimequota)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIotimequota', array($iotimequota));

        return parent::setIotimequota($iotimequota);
    }

    /**
     * {@inheritDoc}
     */
    public function getIotimequota()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIotimequota', array());

        return parent::getIotimequota();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemotePort($remotePort)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemotePort', array($remotePort));

        return parent::setRemotePort($remotePort);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemotePort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemotePort', array());

        return parent::getRemotePort();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriority($priority)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriority', array($priority));

        return parent::setPriority($priority);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriority', array());

        return parent::getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setReadintervaltimeout($readintervaltimeout)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReadintervaltimeout', array($readintervaltimeout));

        return parent::setReadintervaltimeout($readintervaltimeout);
    }

    /**
     * {@inheritDoc}
     */
    public function getReadintervaltimeout()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReadintervaltimeout', array());

        return parent::getReadintervaltimeout();
    }

    /**
     * {@inheritDoc}
     */
    public function setReadtotaltimeoutmultiplier($readtotaltimeoutmultiplier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReadtotaltimeoutmultiplier', array($readtotaltimeoutmultiplier));

        return parent::setReadtotaltimeoutmultiplier($readtotaltimeoutmultiplier);
    }

    /**
     * {@inheritDoc}
     */
    public function getReadtotaltimeoutmultiplier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReadtotaltimeoutmultiplier', array());

        return parent::getReadtotaltimeoutmultiplier();
    }

    /**
     * {@inheritDoc}
     */
    public function setReadtotaltimeoutconstant($readtotaltimeoutconstant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReadtotaltimeoutconstant', array($readtotaltimeoutconstant));

        return parent::setReadtotaltimeoutconstant($readtotaltimeoutconstant);
    }

    /**
     * {@inheritDoc}
     */
    public function getReadtotaltimeoutconstant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReadtotaltimeoutconstant', array());

        return parent::getReadtotaltimeoutconstant();
    }

    /**
     * {@inheritDoc}
     */
    public function setWritetotaltimeoutmultiplier($writetotaltimeoutmultiplier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWritetotaltimeoutmultiplier', array($writetotaltimeoutmultiplier));

        return parent::setWritetotaltimeoutmultiplier($writetotaltimeoutmultiplier);
    }

    /**
     * {@inheritDoc}
     */
    public function getWritetotaltimeoutmultiplier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWritetotaltimeoutmultiplier', array());

        return parent::getWritetotaltimeoutmultiplier();
    }

    /**
     * {@inheritDoc}
     */
    public function setWritetotaltimeoutconstant($writetotaltimeoutconstant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWritetotaltimeoutconstant', array($writetotaltimeoutconstant));

        return parent::setWritetotaltimeoutconstant($writetotaltimeoutconstant);
    }

    /**
     * {@inheritDoc}
     */
    public function getWritetotaltimeoutconstant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWritetotaltimeoutconstant', array());

        return parent::getWritetotaltimeoutconstant();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocalPort($localPort)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocalPort', array($localPort));

        return parent::setLocalPort($localPort);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocalPort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocalPort', array());

        return parent::getLocalPort();
    }

    /**
     * {@inheritDoc}
     */
    public function setActionBeforeLock($actionBeforeLock)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActionBeforeLock', array($actionBeforeLock));

        return parent::setActionBeforeLock($actionBeforeLock);
    }

    /**
     * {@inheritDoc}
     */
    public function getActionBeforeLock()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActionBeforeLock', array());

        return parent::getActionBeforeLock();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentid($groupid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentid', array($groupid));

        return parent::setParentid($groupid);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentid', array());

        return parent::getParentid();
    }

    /**
     * {@inheritDoc}
     */
    public function exchangeArray($data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'exchangeArray', array($data));

        return parent::exchangeArray($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getArrayCopy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrayCopy', array());

        return parent::getArrayCopy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedWhen($createdWhen)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedWhen', array($createdWhen));

        return parent::setCreatedWhen($createdWhen);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedWhen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedWhen', array());

        return parent::getCreatedWhen();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedBy($modifiedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedBy', array($modifiedBy));

        return parent::setModifiedBy($modifiedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedBy', array());

        return parent::getModifiedBy();
    }

}
